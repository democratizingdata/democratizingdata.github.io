/*! Design System Placeholders */
/*! SCSS Placeholders for Credential Engine Design System */

// =============================================================================
// LAYOUT PLACEHOLDERS
// =============================================================================

// Flexbox patterns
%flex-center {
  @include flex-center;
}

%flex-between {
  @include flex-between;
}

%flex-column {
  @include flex-column;
}

// Container patterns
%container {
  @include container;
}

%container-sm {
  @include container($container-sm);
}

%container-lg {
  @include container($container-lg);
}

// =============================================================================
// TYPOGRAPHY PLACEHOLDERS
// =============================================================================

// Heading patterns
%heading-primary {
  @include heading(1);
}

%heading-secondary {
  @include heading(2);
}

%heading-tertiary {
  @include heading(3);
}

// Text utilities
%text-truncate {
  @include text-truncate;
}

%text-truncate-2 {
  @include text-truncate-lines(2);
}

%text-truncate-3 {
  @include text-truncate-lines(3);
}

// =============================================================================
// COMPONENT PLACEHOLDERS
// =============================================================================

// Button patterns
%button-base {
  @include button-base;
}

%button-primary {
  @include button-base;
  @include button-variant($color-primary, $color-text-white);
  @include button-size($button-padding-md, $font-size-body);
}

%button-secondary {
  @include button-base;
  @include button-variant($color-secondary, $color-text-white);
  @include button-size($button-padding-md, $font-size-body);
}

%button-outline {
  @include button-base;
  @include button-variant(transparent, $color-primary, $color-primary);
  @include button-size($button-padding-md, $font-size-body);
}

// Card patterns
%card-base {
  @include card-base;
}

%card-elevated {
  @include card-base;
  box-shadow: $shadow-lg;
  
  &:hover {
    box-shadow: $shadow-xl;
  }
}

// Form patterns
%input-base {
  @include input-base;
}

%form-group {
  margin-bottom: $space-4;
  
  label {
    display: block;
    margin-bottom: $space-1;
    font-weight: $font-weight-medium;
    color: $color-text-primary;
  }
  
  .form-help {
    margin-top: $space-1;
    font-size: $font-size-small;
    color: $color-text-secondary;
  }
  
  .form-error {
    margin-top: $space-1;
    font-size: $font-size-small;
    color: $color-error;
  }
}

// =============================================================================
// UTILITY PLACEHOLDERS
// =============================================================================

// Accessibility
%visually-hidden {
  @include visually-hidden;
}

%focus-ring {
  @include focus-ring;
}

// Clearfix
%clearfix {
  @include clearfix;
}

// Aspect ratios
%aspect-square {
  @include aspect-ratio(1, 1);
}

%aspect-video {
  @include aspect-ratio(16, 9);
}

%aspect-photo {
  @include aspect-ratio(4, 3);
}

// =============================================================================
// ANIMATION PLACEHOLDERS
// =============================================================================

// Fade animations
%fade-in {
  @include fade-in;
}

%fade-in-slow {
  @include fade-in($duration-slow);
}

// Slide animations
%slide-up {
  @include slide-up;
}

%slide-up-slow {
  @include slide-up($duration-slow);
}

// Hover effects
%hover-lift {
  @include hover-lift;
}

%hover-lift-large {
  @include hover-lift(4px);
}

// =============================================================================
// STATE PLACEHOLDERS
// =============================================================================

// Loading states
%loading {
  position: relative;
  pointer-events: none;
  
  &::after {
    content: "";
    position: absolute;
    top: 50%;
    left: 50%;
    width: 20px;
    height: 20px;
    margin: -10px 0 0 -10px;
    border: 2px solid $color-border-light;
    border-top-color: $color-primary;
    border-radius: 50%;
    animation: spin 1s linear infinite;
  }
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

// Disabled states
%disabled {
  opacity: 0.6;
  pointer-events: none;
  cursor: not-allowed;
}

// Error states
%error-state {
  border-color: $color-error;
  color: $color-error;
  
  &:focus {
    border-color: $color-error;
    box-shadow: 0 0 0 3px rgba($color-error, 0.1);
  }
}

// Success states
%success-state {
  border-color: $color-success;
  color: $color-success;
  
  &:focus {
    border-color: $color-success;
    box-shadow: 0 0 0 3px rgba($color-success, 0.1);
  }
}

// =============================================================================
// RESPONSIVE PLACEHOLDERS
// =============================================================================

// Hide/show at breakpoints
%hidden-mobile {
  @include respond-to-max(sm) {
    display: none !important;
  }
}

%hidden-tablet {
  @include respond-between($breakpoint-sm, $breakpoint-lg) {
    display: none !important;
  }
}

%hidden-desktop {
  @include respond-to(lg) {
    display: none !important;
  }
}

%show-mobile-only {
  @include respond-to(sm) {
    display: none !important;
  }
}

%show-tablet-only {
  display: none !important;
  
  @include respond-between($breakpoint-sm, $breakpoint-lg) {
    display: block !important;
  }
}

%show-desktop-only {
  display: none !important;
  
  @include respond-to(lg) {
    display: block !important;
  }
} 