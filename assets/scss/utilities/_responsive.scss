/*! Responsive Utilities */
/*! Responsive utility classes for fine-grained control */

// =============================================================================
// DISPLAY UTILITIES
// =============================================================================

// Hide/show at specific breakpoints
.hidden {
  display: none !important;
}

.visible {
  display: block !important;
}

// Mobile (xs) utilities
@include respond-to-max(sm) {
  .hidden-xs { display: none !important; }
  .visible-xs { display: block !important; }
  .visible-xs-inline { display: inline !important; }
  .visible-xs-inline-block { display: inline-block !important; }
  .visible-xs-flex { display: flex !important; }
  .visible-xs-grid { display: grid !important; }
}

// Small (sm) utilities
@include respond-to(sm) {
  .hidden-sm { display: none !important; }
  .visible-sm { display: block !important; }
  .visible-sm-inline { display: inline !important; }
  .visible-sm-inline-block { display: inline-block !important; }
  .visible-sm-flex { display: flex !important; }
  .visible-sm-grid { display: grid !important; }
}

// Medium (md) utilities
@include respond-to(md) {
  .hidden-md { display: none !important; }
  .visible-md { display: block !important; }
  .visible-md-inline { display: inline !important; }
  .visible-md-inline-block { display: inline-block !important; }
  .visible-md-flex { display: flex !important; }
  .visible-md-grid { display: grid !important; }
}

// Large (lg) utilities
@include respond-to(lg) {
  .hidden-lg { display: none !important; }
  .visible-lg { display: block !important; }
  .visible-lg-inline { display: inline !important; }
  .visible-lg-inline-block { display: inline-block !important; }
  .visible-lg-flex { display: flex !important; }
  .visible-lg-grid { display: grid !important; }
}

// Extra large (xl) utilities
@include respond-to(xl) {
  .hidden-xl { display: none !important; }
  .visible-xl { display: block !important; }
  .visible-xl-inline { display: inline !important; }
  .visible-xl-inline-block { display: inline-block !important; }
  .visible-xl-flex { display: flex !important; }
  .visible-xl-grid { display: grid !important; }
}

// =============================================================================
// RESPONSIVE SPACING
// =============================================================================

// Responsive margin utilities
@each $breakpoint in (xs, sm, md, lg, xl) {
  @if $breakpoint == xs {
    @include respond-to-max(sm) {
      .m-#{$breakpoint}-0 { margin: 0 !important; }
      .m-#{$breakpoint}-1 { margin: var(--ce-space-1) !important; }
      .m-#{$breakpoint}-2 { margin: var(--ce-space-2) !important; }
      .m-#{$breakpoint}-3 { margin: var(--ce-space-3) !important; }
      .m-#{$breakpoint}-4 { margin: var(--ce-space-4) !important; }
      .m-#{$breakpoint}-6 { margin: var(--ce-space-6) !important; }
      .m-#{$breakpoint}-8 { margin: var(--ce-space-8) !important; }
      
      .mt-#{$breakpoint}-0 { margin-top: 0 !important; }
      .mt-#{$breakpoint}-1 { margin-top: var(--ce-space-1) !important; }
      .mt-#{$breakpoint}-2 { margin-top: var(--ce-space-2) !important; }
      .mt-#{$breakpoint}-3 { margin-top: var(--ce-space-3) !important; }
      .mt-#{$breakpoint}-4 { margin-top: var(--ce-space-4) !important; }
      .mt-#{$breakpoint}-6 { margin-top: var(--ce-space-6) !important; }
      .mt-#{$breakpoint}-8 { margin-top: var(--ce-space-8) !important; }
      
      .mb-#{$breakpoint}-0 { margin-bottom: 0 !important; }
      .mb-#{$breakpoint}-1 { margin-bottom: var(--ce-space-1) !important; }
      .mb-#{$breakpoint}-2 { margin-bottom: var(--ce-space-2) !important; }
      .mb-#{$breakpoint}-3 { margin-bottom: var(--ce-space-3) !important; }
      .mb-#{$breakpoint}-4 { margin-bottom: var(--ce-space-4) !important; }
      .mb-#{$breakpoint}-6 { margin-bottom: var(--ce-space-6) !important; }
      .mb-#{$breakpoint}-8 { margin-bottom: var(--ce-space-8) !important; }
    }
  } @else {
    @include respond-to($breakpoint) {
      .m-#{$breakpoint}-0 { margin: 0 !important; }
      .m-#{$breakpoint}-1 { margin: var(--ce-space-1) !important; }
      .m-#{$breakpoint}-2 { margin: var(--ce-space-2) !important; }
      .m-#{$breakpoint}-3 { margin: var(--ce-space-3) !important; }
      .m-#{$breakpoint}-4 { margin: var(--ce-space-4) !important; }
      .m-#{$breakpoint}-6 { margin: var(--ce-space-6) !important; }
      .m-#{$breakpoint}-8 { margin: var(--ce-space-8) !important; }
      
      .mt-#{$breakpoint}-0 { margin-top: 0 !important; }
      .mt-#{$breakpoint}-1 { margin-top: var(--ce-space-1) !important; }
      .mt-#{$breakpoint}-2 { margin-top: var(--ce-space-2) !important; }
      .mt-#{$breakpoint}-3 { margin-top: var(--ce-space-3) !important; }
      .mt-#{$breakpoint}-4 { margin-top: var(--ce-space-4) !important; }
      .mt-#{$breakpoint}-6 { margin-top: var(--ce-space-6) !important; }
      .mt-#{$breakpoint}-8 { margin-top: var(--ce-space-8) !important; }
      
      .mb-#{$breakpoint}-0 { margin-bottom: 0 !important; }
      .mb-#{$breakpoint}-1 { margin-bottom: var(--ce-space-1) !important; }
      .mb-#{$breakpoint}-2 { margin-bottom: var(--ce-space-2) !important; }
      .mb-#{$breakpoint}-3 { margin-bottom: var(--ce-space-3) !important; }
      .mb-#{$breakpoint}-4 { margin-bottom: var(--ce-space-4) !important; }
      .mb-#{$breakpoint}-6 { margin-bottom: var(--ce-space-6) !important; }
      .mb-#{$breakpoint}-8 { margin-bottom: var(--ce-space-8) !important; }
    }
  }
}

// =============================================================================
// RESPONSIVE TYPOGRAPHY
// =============================================================================

// Responsive text alignment
@each $breakpoint in (xs, sm, md, lg, xl) {
  @if $breakpoint == xs {
    @include respond-to-max(sm) {
      .text-#{$breakpoint}-left { text-align: left !important; }
      .text-#{$breakpoint}-center { text-align: center !important; }
      .text-#{$breakpoint}-right { text-align: right !important; }
    }
  } @else {
    @include respond-to($breakpoint) {
      .text-#{$breakpoint}-left { text-align: left !important; }
      .text-#{$breakpoint}-center { text-align: center !important; }
      .text-#{$breakpoint}-right { text-align: right !important; }
    }
  }
}

// Responsive font sizes
@include respond-to-max(sm) {
  .text-xs-sm { font-size: var(--ce-font-size-small) !important; }
  .text-xs-base { font-size: var(--ce-font-size-body) !important; }
  .text-xs-lg { font-size: var(--ce-font-size-large) !important; }
}

@include respond-to(sm) {
  .text-sm-sm { font-size: var(--ce-font-size-small) !important; }
  .text-sm-base { font-size: var(--ce-font-size-body) !important; }
  .text-sm-lg { font-size: var(--ce-font-size-large) !important; }
}

@include respond-to(md) {
  .text-md-sm { font-size: var(--ce-font-size-small) !important; }
  .text-md-base { font-size: var(--ce-font-size-body) !important; }
  .text-md-lg { font-size: var(--ce-font-size-large) !important; }
}

@include respond-to(lg) {
  .text-lg-sm { font-size: var(--ce-font-size-small) !important; }
  .text-lg-base { font-size: var(--ce-font-size-body) !important; }
  .text-lg-lg { font-size: var(--ce-font-size-large) !important; }
}

// =============================================================================
// RESPONSIVE FLEXBOX
// =============================================================================

// Responsive flex direction
@each $breakpoint in (xs, sm, md, lg, xl) {
  @if $breakpoint == xs {
    @include respond-to-max(sm) {
      .flex-#{$breakpoint}-row { flex-direction: row !important; }
      .flex-#{$breakpoint}-col { flex-direction: column !important; }
      .flex-#{$breakpoint}-row-reverse { flex-direction: row-reverse !important; }
      .flex-#{$breakpoint}-col-reverse { flex-direction: column-reverse !important; }
    }
  } @else {
    @include respond-to($breakpoint) {
      .flex-#{$breakpoint}-row { flex-direction: row !important; }
      .flex-#{$breakpoint}-col { flex-direction: column !important; }
      .flex-#{$breakpoint}-row-reverse { flex-direction: row-reverse !important; }
      .flex-#{$breakpoint}-col-reverse { flex-direction: column-reverse !important; }
    }
  }
}

// Responsive justify content
@each $breakpoint in (xs, sm, md, lg, xl) {
  @if $breakpoint == xs {
    @include respond-to-max(sm) {
      .justify-#{$breakpoint}-start { justify-content: flex-start !important; }
      .justify-#{$breakpoint}-center { justify-content: center !important; }
      .justify-#{$breakpoint}-end { justify-content: flex-end !important; }
      .justify-#{$breakpoint}-between { justify-content: space-between !important; }
      .justify-#{$breakpoint}-around { justify-content: space-around !important; }
      .justify-#{$breakpoint}-evenly { justify-content: space-evenly !important; }
    }
  } @else {
    @include respond-to($breakpoint) {
      .justify-#{$breakpoint}-start { justify-content: flex-start !important; }
      .justify-#{$breakpoint}-center { justify-content: center !important; }
      .justify-#{$breakpoint}-end { justify-content: flex-end !important; }
      .justify-#{$breakpoint}-between { justify-content: space-between !important; }
      .justify-#{$breakpoint}-around { justify-content: space-around !important; }
      .justify-#{$breakpoint}-evenly { justify-content: space-evenly !important; }
    }
  }
}

// =============================================================================
// RESPONSIVE WIDTHS
// =============================================================================

// Responsive width utilities
@each $breakpoint in (xs, sm, md, lg, xl) {
  @if $breakpoint == xs {
    @include respond-to-max(sm) {
      .w-#{$breakpoint}-auto { width: auto !important; }
      .w-#{$breakpoint}-full { width: 100% !important; }
      .w-#{$breakpoint}-1-2 { width: 50% !important; }
      .w-#{$breakpoint}-1-3 { width: 33.333333% !important; }
      .w-#{$breakpoint}-2-3 { width: 66.666667% !important; }
      .w-#{$breakpoint}-1-4 { width: 25% !important; }
      .w-#{$breakpoint}-3-4 { width: 75% !important; }
    }
  } @else {
    @include respond-to($breakpoint) {
      .w-#{$breakpoint}-auto { width: auto !important; }
      .w-#{$breakpoint}-full { width: 100% !important; }
      .w-#{$breakpoint}-1-2 { width: 50% !important; }
      .w-#{$breakpoint}-1-3 { width: 33.333333% !important; }
      .w-#{$breakpoint}-2-3 { width: 66.666667% !important; }
      .w-#{$breakpoint}-1-4 { width: 25% !important; }
      .w-#{$breakpoint}-3-4 { width: 75% !important; }
    }
  }
}

// =============================================================================
// RESPONSIVE ORDER
// =============================================================================

// Responsive flex order
@each $breakpoint in (xs, sm, md, lg, xl) {
  @if $breakpoint == xs {
    @include respond-to-max(sm) {
      .order-#{$breakpoint}-first { order: -1 !important; }
      .order-#{$breakpoint}-last { order: 999 !important; }
      .order-#{$breakpoint}-1 { order: 1 !important; }
      .order-#{$breakpoint}-2 { order: 2 !important; }
      .order-#{$breakpoint}-3 { order: 3 !important; }
      .order-#{$breakpoint}-4 { order: 4 !important; }
    }
  } @else {
    @include respond-to($breakpoint) {
      .order-#{$breakpoint}-first { order: -1 !important; }
      .order-#{$breakpoint}-last { order: 999 !important; }
      .order-#{$breakpoint}-1 { order: 1 !important; }
      .order-#{$breakpoint}-2 { order: 2 !important; }
      .order-#{$breakpoint}-3 { order: 3 !important; }
      .order-#{$breakpoint}-4 { order: 4 !important; }
    }
  }
}

// =============================================================================
// RESPONSIVE GRID UTILITIES
// =============================================================================

// Responsive grid column spans
@each $breakpoint in (xs, sm, md, lg, xl) {
  @if $breakpoint == xs {
    @include respond-to-max(sm) {
      .col-#{$breakpoint}-1 { grid-column: span 1 !important; }
      .col-#{$breakpoint}-2 { grid-column: span 2 !important; }
      .col-#{$breakpoint}-3 { grid-column: span 3 !important; }
      .col-#{$breakpoint}-4 { grid-column: span 4 !important; }
      .col-#{$breakpoint}-full { grid-column: 1 / -1 !important; }
    }
  } @else {
    @include respond-to($breakpoint) {
      .col-#{$breakpoint}-1 { grid-column: span 1 !important; }
      .col-#{$breakpoint}-2 { grid-column: span 2 !important; }
      .col-#{$breakpoint}-3 { grid-column: span 3 !important; }
      .col-#{$breakpoint}-4 { grid-column: span 4 !important; }
      .col-#{$breakpoint}-full { grid-column: 1 / -1 !important; }
    }
  }
}

// =============================================================================
// PRINT UTILITIES
// =============================================================================

@media print {
  .print-hidden { display: none !important; }
  .print-visible { display: block !important; }
  .print-break-before { page-break-before: always !important; }
  .print-break-after { page-break-after: always !important; }
  .print-break-inside-avoid { page-break-inside: avoid !important; }
} 